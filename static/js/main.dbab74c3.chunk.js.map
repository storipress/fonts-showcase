{"version":3,"sources":["FontPreview.js","App.js","reportWebVitals.js","index.js"],"names":["FontPreview","useState","text","setText","filter","URLSearchParams","window","location","search","get","style","position","background","top","display","paddingTop","paddingBottom","marginLeft","border","paddingLeft","value","onChange","e","target","Object","keys","fontList","map","category","toLowerCase","colSpan","name","fontFamily","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAUO,SAASA,IAAe,IAAD,EACJC,mBAAS,eADL,mBACrBC,EADqB,KACfC,EADe,KAEtBC,EANS,IAAIC,gBAAgBC,OAAOC,SAASC,QACrCC,IAAI,YAOlB,OACE,qCACE,wBACEC,MAAO,CACLC,SAAU,SACVC,WAAY,QACZC,IAAK,IACLC,QAAS,QACTC,WAAY,SACZC,cAAe,UAPnB,0BAWE,uBACEN,MAAO,CAAEO,WAAY,OAAQC,OAAQ,iBAAkBC,YAAa,UACpEC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAQmB,EAAEC,OAAOH,aAGtC,kCACE,gCACE,+BACE,sCACA,8CAGJ,gCACGI,OAAOC,KAAKC,KAAUC,KAAI,SAACC,GAAD,OACf,MAAVxB,GAAkBwB,EAASC,gBAAkBzB,EAC3C,eAAC,WAAD,WACIA,EAIE,KAHF,6BACE,oBAAI0B,QAAS,EAAb,SAAiBF,MAGpBF,IAASE,GAAUD,KAAI,SAACI,GAAD,OACtB,+BACE,6BAAKA,IACL,oBAAIrB,MAAO,CAAEsB,WAAW,IAAD,OAAMD,EAAN,KAAeE,SAAU,QAAhD,SAA2D/B,GAAQ,kBAF5D6B,QAPEH,GAab,gBClDDM,MAJf,WACE,OAAO,cAAClC,EAAD,KCSMmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dbab74c3.chunk.js","sourcesContent":["import '@storipress/fonts/fonts.css'\n\nimport { fontList } from '@storipress/fonts/font-list.ts'\nimport { Fragment, useState } from 'react'\n\nfunction readQuery() {\n  const params = new URLSearchParams(window.location.search)\n  return params.get('category')\n}\n\nexport function FontPreview() {\n  const [text, setText] = useState('Hello world')\n  const filter = readQuery()\n\n  return (\n    <>\n      <label\n        style={{\n          position: 'sticky',\n          background: 'white',\n          top: '0',\n          display: 'block',\n          paddingTop: '0.5rem',\n          paddingBottom: '0.5rem',\n        }}\n      >\n        Preview Text:\n        <input\n          style={{ marginLeft: '1rem', border: 'blue 1px solid', paddingLeft: '0.5rem' }}\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </label>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Preview</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(fontList).map((category) =>\n            filter == null || category.toLowerCase() === filter ? (\n              <Fragment key={category}>\n                {!filter ? (\n                  <tr>\n                    <th colSpan={2}>{category}</th>\n                  </tr>\n                ) : null}\n                {fontList[category].map((name) => (\n                  <tr key={name}>\n                    <td>{name}</td>\n                    <td style={{ fontFamily: `'${name}'`, fontSize: '2rem' }}>{text || 'Hello world'}</td>\n                  </tr>\n                ))}\n              </Fragment>\n            ) : null\n          )}\n        </tbody>\n      </table>\n    </>\n  )\n}\n","import { FontPreview } from './FontPreview'\n\nfunction App() {\n  return <FontPreview />\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}